name: "Labeler: Download Pull Requests"

on:
  workflow_call:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      org_repo:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      label_prefix:
        description: "Label prefix"
        type: string
        default: "area-"
      page_size:
        description: "The number of items to include on each request"
        type: number
        default: "25"
        required: true
      page_limit:
        description: "Max pages of items to download"
        type: number
        default: "4000"
        required: true
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
        default: "30,30,30,300,300,3600"
      data_key:
        description: "The optional key to use in the cache key suffix for saving the downloaded data"
        type: string

  workflow_dispatch:
    inputs:
      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      org_repo:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      label_prefix:
        description: "Label prefix"
        type: string
        default: "area-"
        required: true
      page_size:
        description: "The number of items to include on each request"
        type: number
        default: "25"
        required: true
      page_limit:
        description: "Max pages of items to download"
        type: number
        default: "4000"
        required: true
      retries:
        description: "Comma-separated list of retry delays in seconds"
        type: string
        default: "30,30,30,300,300,3600"
      data_key:
        description: "The optional key to use in the cache key suffix for saving the downloaded data"
        type: string

permissions:
  pull-requests: read
  actions: write

env:
  CACHE_KEY: ${{ inputs.data_key || format('github-ml-labeler/{0}', (inputs.org_repo || github.repository)) }}/download-pulls
  GH_TOKEN: ${{ github.token }}

jobs:
  labeler-download-pulls:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: "Check out the 'jeffhandley/github-ml-labeler' repo"
        uses: actions/checkout@v4
        with:
          repository: jeffhandley/github-ml-labeler

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: "Run GitHubDownloader"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          dotnet run --project src/GitHubDownloader -- \
            --token "${{ inputs.github_token || secrets.GITHUB_TOKEN }}" \
            --repo "${{ inputs.org_repo || github.repository }}" \
            --pull-data labeler-cache/pull-data.tsv \
            --retries "${{ inputs.retries || '30,30,30,300,300,3600' }}" \
            --label-prefix "${{ inputs.label_prefix || 'area-' }}" \
            --page-size ${{ fromJSON( inputs.page_size || 25 ) }} \
            --page-limit ${{ fromJSON( inputs.page_limit || 4000 ) }}

      - name: "Check cache for existing entry"
        id: check-cache
        uses: actions/cache/restore@v4
        with:
          path: labeler-cache/pull-data.tsv
          key: ${{ env.CACHE_KEY }}
          fail-on-cache-miss: false

      - name: "Delete existing cache entry"
        if: steps.check-cache.outputs.cache-hit == 'true'
        run: |
            gh api --method DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/caches?key=${{ env.CACHE_KEY }}

      - name: "Save downloaded data to cache"
        uses: actions/cache/save@v4
        with:
          path: labeler-cache/pull-data.tsv
          key: ${{ env.CACHE_KEY }}
